#!/bin/bash

_REPO_DIR_="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CALL_ORIGIN="$( pwd )"

# loading essential scripts
source $_REPO_DIR_/scripts/initialize.sh
source $_REPO_DIR_/scripts/preprocessor.sh
source $_REPO_DIR_/scripts/handler_docker.sh
source $_REPO_DIR_/scripts/set_env.sh
source $_REPO_DIR_/scripts/cmd.sh
source $_REPO_DIR_/conf

if [ -d $CALL_ORIGIN/.dev_env ]; then
  setup_exec_env $CALL_ORIGIN/.dev_env
fi

if [ $? != 0 ] ; then echo "Terminating...NOW" >&2 ; exit 1 ; fi


# replace long arguments
args=( )
str=''
delim=" "
count=0
for arg; do
  if [[ $count -eq 0 ]];then
    str=''
    case "$arg" in
      # predifined set of commands
      build)      args+=( -D ); count=1;;
      # list contents of file in .dev_env folder
      help|-h|--help)
        echo "usage";
        exit 0
      ;;
      init)       args+=( -i ); count=-1;;
      preprocess) check_dir $REPO_DIR_NAME; args+=( -p ); count=2;;
      rm-container) check_dir $REPO_DIR_NAME; args+=( -r ); count=1;;
      # self aware (repo config) commands
      --*=*)  flag=`sed "s/--//g" <<< $arg`
        flag_val=`sed 's/\(\a*\)=\(\a*\)/\1\ \2/' <<< $flag`
        exec_flag $flag_val
      ;;
      --*)    flag=`sed "s/--//g" <<< $arg`
        exec_flag $flag
      ;;
      *)      exec_cmd $arg $@
        exit 0
      ;;
    esac
  else
    str=$str$delim$arg
    count=$(($count - 1))
    if [[ $count -eq 0 ]];then args+=( "$str" ); fi
  fi
done
if [[ $count -lt 0 ]];then args+=( "$str" ); fi

set -- "${args[@]}"

while getopts :D:i:p:r:t OPTION; do
  : "$OPTION" "$OPTARG"
  case $OPTION in
    D)  docker_build $OPTARG; exit 0;;
    i)  init $CALL_ORIGIN $OPTARG; exit 0;;
    p)  preprocess -c $OPTARG;;
    t)  dev_run -t, exit 0;;
    r)  remove_container $OPTARG;;
    \?) echo $OPTION"  "$OPTARG;;
  esac
done
